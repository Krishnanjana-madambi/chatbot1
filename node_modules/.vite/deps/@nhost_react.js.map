{
  "version": 3,
  "sources": ["../../use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../use-sync-external-store/shim/index.js", "../../use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js", "../../use-sync-external-store/shim/with-selector.js", "../../@xstate/react/es/useMachine.js", "../../@xstate/react/es/useInterpret.js", "../../use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js", "../../@xstate/react/es/useConstant.js", "../../@xstate/react/es/utils.js", "../../@xstate/react/es/useActor.js", "../../@xstate/react/es/useSelector.js", "../../@xstate/react/es/createActorContext.js", "../../@nhost/react/src/client.ts", "../../@nhost/react/src/provider.tsx", "../../@nhost/react/src/useAuthInterpreter.ts", "../../@nhost/react/src/useAuthenticationStatus.ts", "../../@nhost/react/src/components/SignedIn.tsx", "../../@nhost/react/src/components/SignedOut.tsx", "../../@nhost/react/src/useAccessToken.ts", "../../@nhost/react/src/useNhostClient.ts", "../../@nhost/react/src/useAddSecurityKey.ts", "../../@nhost/react/src/useAuthenticated.ts", "../../@nhost/react/src/useChangeEmail.ts", "../../@nhost/react/src/useChangePassword.ts", "../../@nhost/react/src/useConfigMfa.ts", "../../@nhost/react/src/useDecodedAccessToken.ts", "../../@nhost/react/src/useFileUpload.ts", "../../@nhost/react/src/useHasuraClaims.ts", "../../@nhost/react/src/useHasuraClaim.ts", "../../@nhost/react/src/useMultipleFilesUpload.ts", "../../@nhost/react/src/useProviderLink.ts", "../../@nhost/react/src/useResetPassword.ts", "../../@nhost/react/src/useSendVerificationEmail.ts", "../../@nhost/react/src/useSignInAnonymous.ts", "../../@nhost/react/src/useSignInEmailPassword.ts", "../../@nhost/react/src/useSignInEmailPasswordless.ts", "../../@nhost/react/src/useSignInEmailSecurityKey.ts", "../../@nhost/react/src/useUserData.ts", "../../@nhost/react/src/useElevateSecurityKeyEmail.ts", "../../@nhost/react/src/useSignInPAT.ts", "../../@nhost/react/src/useSignInSmsPasswordless.ts", "../../@nhost/react/src/useSignOut.ts", "../../@nhost/react/src/useSignUpEmailPassword.ts", "../../@nhost/react/src/useSignUpEmailSecurityKey.ts", "../../@nhost/react/src/useUserAvatarUrl.ts", "../../@nhost/react/src/useUserDefaultRole.ts", "../../@nhost/react/src/useUserDisplayName.ts", "../../@nhost/react/src/useUserEmail.ts", "../../@nhost/react/src/useUserId.ts", "../../@nhost/react/src/useUserIsAnonymous.ts", "../../@nhost/react/src/useUserLocale.ts", "../../@nhost/react/src/useUserRoles.ts", "../../@nhost/react/src/useSignInEmailOTP.ts", "../../@nhost/react/src/useSignInIdToken.ts", "../../@nhost/react/src/useLinkIdToken.ts", "../../@nhost/react/src/useSignInSecurityKey.ts"],
  "sourcesContent": ["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      shim = require(\"use-sync-external-store/shim\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useSyncExternalStore = shim.useSyncExternalStore,\n      useRef = React.useRef,\n      useEffect = React.useEffect,\n      useMemo = React.useMemo,\n      useDebugValue = React.useDebugValue;\n    exports.useSyncExternalStoreWithSelector = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector,\n      isEqual\n    ) {\n      var instRef = useRef(null);\n      if (null === instRef.current) {\n        var inst = { hasValue: !1, value: null };\n        instRef.current = inst;\n      } else inst = instRef.current;\n      instRef = useMemo(\n        function () {\n          function memoizedSelector(nextSnapshot) {\n            if (!hasMemo) {\n              hasMemo = !0;\n              memoizedSnapshot = nextSnapshot;\n              nextSnapshot = selector(nextSnapshot);\n              if (void 0 !== isEqual && inst.hasValue) {\n                var currentSelection = inst.value;\n                if (isEqual(currentSelection, nextSnapshot))\n                  return (memoizedSelection = currentSelection);\n              }\n              return (memoizedSelection = nextSnapshot);\n            }\n            currentSelection = memoizedSelection;\n            if (objectIs(memoizedSnapshot, nextSnapshot))\n              return currentSelection;\n            var nextSelection = selector(nextSnapshot);\n            if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n              return (memoizedSnapshot = nextSnapshot), currentSelection;\n            memoizedSnapshot = nextSnapshot;\n            return (memoizedSelection = nextSelection);\n          }\n          var hasMemo = !1,\n            memoizedSnapshot,\n            memoizedSelection,\n            maybeGetServerSnapshot =\n              void 0 === getServerSnapshot ? null : getServerSnapshot;\n          return [\n            function () {\n              return memoizedSelector(getSnapshot());\n            },\n            null === maybeGetServerSnapshot\n              ? void 0\n              : function () {\n                  return memoizedSelector(maybeGetServerSnapshot());\n                }\n          ];\n        },\n        [getSnapshot, getServerSnapshot, selector, isEqual]\n      );\n      var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n      useEffect(\n        function () {\n          inst.hasValue = !0;\n          inst.value = value;\n        },\n        [value]\n      );\n      useDebugValue(value);\n      return value;\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n", "var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useCallback, useEffect } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { InterpreterStatus, State } from 'xstate';\nimport { useIdleInterpreter } from './useInterpret';\nimport { isInterpreterStateEqual } from './utils';\nfunction identity(a) {\n    return a;\n}\nexport function useMachine(getMachine) {\n    var _a = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        _a[_i - 1] = arguments[_i];\n    }\n    var _b = __read(_a, 1), _c = _b[0], options = _c === void 0 ? {} : _c;\n    // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n    // so we don't miss any notifications\n    var service = useIdleInterpreter(getMachine, options);\n    var getSnapshot = useCallback(function () {\n        if (service.status === InterpreterStatus.NotStarted) {\n            return (options.state\n                ? State.create(options.state)\n                : service.machine.initialState);\n        }\n        return service.getSnapshot();\n    }, [service]);\n    var isEqual = useCallback(function (prevState, nextState) {\n        return isInterpreterStateEqual(service, prevState, nextState);\n    }, [service]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [service]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n    useEffect(function () {\n        var rehydratedState = options.state;\n        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n        return function () {\n            service.stop();\n            service.status = InterpreterStatus.NotStarted;\n        };\n    }, []);\n    return [storeSnapshot, service.send, service];\n}\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useEffect, useState } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { interpret, InterpreterStatus, State, toObserver } from 'xstate';\nimport useConstant from './useConstant';\nexport function useIdleInterpreter(getMachine, options) {\n    var machine = useConstant(function () {\n        return typeof getMachine === 'function' ? getMachine() : getMachine;\n    });\n    if (process.env.NODE_ENV !== 'production' &&\n        typeof getMachine !== 'function') {\n        var _a = __read(useState(machine), 1), initialMachine = _a[0];\n        if (getMachine !== initialMachine) {\n            console.warn('Machine given to `useMachine` has changed between renders. This is not supported and might lead to unexpected results.\\n' +\n                'Please make sure that you pass the same Machine as argument each time.');\n        }\n    }\n    var context = options.context, guards = options.guards, actions = options.actions, activities = options.activities, services = options.services, delays = options.delays, rehydratedState = options.state, interpreterOptions = __rest(options, [\"context\", \"guards\", \"actions\", \"activities\", \"services\", \"delays\", \"state\"]);\n    var service = useConstant(function () {\n        var machineConfig = {\n            context: context,\n            guards: guards,\n            actions: actions,\n            activities: activities,\n            services: services,\n            delays: delays\n        };\n        var machineWithConfig = machine.withConfig(machineConfig, function () { return (__assign(__assign({}, machine.context), context)); });\n        return interpret(machineWithConfig, interpreterOptions);\n    });\n    // Make sure options are kept updated when they change.\n    // This mutation assignment is safe because the service instance is only used\n    // in one place -- this hook's caller.\n    useIsomorphicLayoutEffect(function () {\n        Object.assign(service.machine.options.actions, actions);\n        Object.assign(service.machine.options.guards, guards);\n        Object.assign(service.machine.options.activities, activities);\n        Object.assign(service.machine.options.services, services);\n        Object.assign(service.machine.options.delays, delays);\n    }, [actions, guards, activities, services, delays]);\n    return service;\n}\nexport function useInterpret(getMachine) {\n    var _a = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        _a[_i - 1] = arguments[_i];\n    }\n    var _b = __read(_a, 2), _c = _b[0], options = _c === void 0 ? {} : _c, observerOrListener = _b[1];\n    var service = useIdleInterpreter(getMachine, options);\n    useEffect(function () {\n        if (!observerOrListener) {\n            return;\n        }\n        var sub = service.subscribe(toObserver(observerOrListener));\n        return function () {\n            sub.unsubscribe();\n        };\n    }, [observerOrListener]);\n    useEffect(function () {\n        var rehydratedState = options.state;\n        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n        return function () {\n            service.stop();\n            service.status = InterpreterStatus.NotStarted;\n        };\n    }, []);\n    return service;\n}\n", "import { useLayoutEffect } from 'react';\n\nvar index = useLayoutEffect ;\n\nexport { index as default };\n", "import * as React from 'react';\nexport default function useConstant(fn) {\n    var ref = React.useRef();\n    if (!ref.current) {\n        ref.current = { v: fn() };\n    }\n    return ref.current.v;\n}\n", "var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { InterpreterStatus } from 'xstate';\nexport function partition(items, predicate) {\n    var e_1, _a;\n    var _b = __read([[], []], 2), truthy = _b[0], falsy = _b[1];\n    try {\n        for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n            var item = items_1_1.value;\n            if (predicate(item)) {\n                truthy.push(item);\n            }\n            else {\n                falsy.push(item);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return [truthy, falsy];\n}\nexport function getServiceSnapshot(service) {\n    return service.status !== 0\n        ? service.getSnapshot()\n        : service.machine.initialState;\n}\n// From https://github.com/reduxjs/react-redux/blob/master/src/utils/shallowEqual.ts\nfunction is(x, y) {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    }\n    else {\n        return x !== x && y !== y;\n    }\n}\nexport function shallowEqual(objA, objB) {\n    if (is(objA, objB))\n        return true;\n    if (typeof objA !== 'object' ||\n        objA === null ||\n        typeof objB !== 'object' ||\n        objB === null) {\n        return false;\n    }\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length)\n        return false;\n    for (var i = 0; i < keysA.length; i++) {\n        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\n            !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isService(actor) {\n    return 'state' in actor && 'machine' in actor;\n}\nexport function isInterpreterStateEqual(service, prevState, nextState) {\n    if (service.status === InterpreterStatus.NotStarted) {\n        return true;\n    }\n    // Only change the current state if:\n    // - the incoming state is the \"live\" initial state (since it might have new actors)\n    // - OR the incoming state actually changed.\n    //\n    // The \"live\" initial state will have .changed === undefined.\n    var initialStateChanged = nextState.changed === undefined &&\n        (Object.keys(nextState.children).length > 0 ||\n            typeof prevState.changed === 'boolean');\n    return !(nextState.changed || initialStateChanged);\n}\n", "import { useRef, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport useConstant from './useConstant';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { getServiceSnapshot, isInterpreterStateEqual, isService } from './utils';\nfunction identity(a) {\n    return a;\n}\nexport function isActorWithState(actorRef) {\n    return 'state' in actorRef;\n}\nfunction isDeferredActor(actorRef) {\n    return 'deferred' in actorRef;\n}\nfunction defaultGetSnapshot(actorRef) {\n    return 'getSnapshot' in actorRef\n        ? isService(actorRef)\n            ? getServiceSnapshot(actorRef)\n            : actorRef.getSnapshot()\n        : isActorWithState(actorRef)\n            ? actorRef.state\n            : undefined;\n}\nexport function useActor(actorRef, getSnapshot) {\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var actorRefRef = useRef(actorRef);\n    var deferredEventsRef = useRef([]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actorRef.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actorRef]);\n    var boundGetSnapshot = useCallback(function () { return getSnapshot(actorRef); }, [actorRef, getSnapshot]);\n    var isEqual = useCallback(function (prevState, nextState) {\n        if (isService(actorRef)) {\n            return isInterpreterStateEqual(actorRef, prevState, nextState);\n        }\n        return prevState === nextState;\n    }, [actorRef]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, identity, isEqual);\n    var send = useConstant(function () { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var event = args[0];\n        if (process.env.NODE_ENV !== 'production' && args.length > 1) {\n            console.warn(\"Unexpected payload: \".concat(JSON.stringify(args[1]), \". Only a single event object can be sent to actor send() functions.\"));\n        }\n        var currentActorRef = actorRefRef.current;\n        // If the previous actor is a deferred actor,\n        // queue the events so that they can be replayed\n        // on the non-deferred actor.\n        if (isDeferredActor(currentActorRef) && currentActorRef.deferred) {\n            deferredEventsRef.current.push(event);\n        }\n        else {\n            currentActorRef.send(event);\n        }\n    }; });\n    useIsomorphicLayoutEffect(function () {\n        actorRefRef.current = actorRef;\n        // Dequeue deferred events from the previous deferred actorRef\n        while (deferredEventsRef.current.length > 0) {\n            var deferredEvent = deferredEventsRef.current.shift();\n            actorRef.send(deferredEvent);\n        }\n    }, [actorRef]);\n    return [storeSnapshot, send];\n}\n", "import { useCallback, useRef } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot, isService } from './utils';\nvar defaultCompare = function (a, b) { return a === b; };\nvar defaultGetSnapshot = function (a, initialStateCacheRef) {\n    if (isService(a)) {\n        // A status of 0 = interpreter not started\n        if (a.status === 0 && initialStateCacheRef.current) {\n            return initialStateCacheRef.current;\n        }\n        var snapshot = getServiceSnapshot(a);\n        initialStateCacheRef.current = a.status === 0 ? snapshot : null;\n        return snapshot;\n    }\n    return isActorWithState(a) ? a.state : undefined;\n};\nexport function useSelector(actor, selector, compare, getSnapshot) {\n    if (compare === void 0) { compare = defaultCompare; }\n    var initialStateCacheRef = useRef(null);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [actor]);\n    var boundGetSnapshot = useCallback(function () {\n        if (getSnapshot) {\n            return getSnapshot(actor);\n        }\n        return defaultGetSnapshot(actor, initialStateCacheRef);\n    }, [actor, getSnapshot]);\n    var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n    return selectedSnapshot;\n}\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useInterpret } from './useInterpret';\nimport { useActor as useActorUnbound } from './useActor';\nimport { useSelector as useSelectorUnbound } from './useSelector';\nexport function createActorContext(machine, interpreterOptions, observerOrListener) {\n    var ReactContext = React.createContext(null);\n    var OriginalProvider = ReactContext.Provider;\n    function Provider(_a) {\n        var children = _a.children, _b = _a.machine, providedMachine = _b === void 0 ? machine : _b, options = _a.options;\n        var actor = useInterpret(providedMachine, __assign(__assign({}, interpreterOptions), options), observerOrListener);\n        return React.createElement(OriginalProvider, { value: actor }, children);\n    }\n    Provider.displayName = \"ActorProvider(\".concat(machine.id, \")\");\n    function useContext() {\n        var actor = React.useContext(ReactContext);\n        if (!actor) {\n            throw new Error(\"You used a hook from \\\"\".concat(Provider.displayName, \"\\\" but it's not inside a <\").concat(Provider.displayName, \"> component.\"));\n        }\n        return actor;\n    }\n    function useActor() {\n        var actor = useContext();\n        return useActorUnbound(actor);\n    }\n    function useSelector(selector, compare) {\n        var actor = useContext();\n        return useSelectorUnbound(actor, selector, compare);\n    }\n    return {\n        Provider: Provider,\n        useActorRef: useContext,\n        useActor: useActor,\n        useSelector: useSelector\n    };\n}\n", "import {\n  NhostClient as _VanillaNhostClient,\n  NhostClientConstructorParams as VanillaNhostClientConstructorParams\n} from '@nhost/nhost-js'\n\n/** @internal */\nexport const VanillaNhostClient = _VanillaNhostClient\n\nexport interface NhostReactClientConstructorParams\n  extends Omit<VanillaNhostClientConstructorParams, 'start' | 'client'> {}\n\nexport class NhostClient extends VanillaNhostClient {\n  constructor(params: NhostReactClientConstructorParams) {\n    super({ ...params, start: false })\n  }\n}\n\n// * Required for @nhost/nextjs\nexport { NHOST_REFRESH_TOKEN_KEY } from '@nhost/nhost-js'\nexport type { AuthMachine, NhostAuthConstructorParams } from '@nhost/nhost-js'\n", "import { NhostSession } from '@nhost/nhost-js'\nimport { useInterpret } from '@xstate/react'\nimport React, { createContext, PropsWithChildren, useEffect, useRef } from 'react'\nimport { NhostClient } from './client'\nexport const NhostReactContext = createContext<NhostClient>({} as NhostClient)\nexport interface NhostProviderProps {\n  nhost: NhostClient\n  initial?: NhostSession\n}\n\nexport const NhostProvider: React.FC<PropsWithChildren<NhostProviderProps>> = ({\n  nhost,\n  initial,\n  ...props\n}) => {\n  const interpreter = useInterpret(nhost.auth.client.machine, { devTools: nhost.devTools })\n\n  nhost.auth.client.start({ interpreter, initialSession: initial, devTools: nhost.devTools })\n\n  // * Hook to send session update everytime the 'initial' props changed\n  const isInitialMount = useRef(true)\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false\n    } else {\n      if (initial) {\n        interpreter.send('SESSION_UPDATE', { data: { session: initial } })\n      }\n    }\n  }, [initial, interpreter])\n\n  return <NhostReactContext.Provider value={nhost}>{props.children}</NhostReactContext.Provider>\n}\n\n/**\n * @deprecated use `NhostProvider` instead\n */\nexport const NhostReactProvider = NhostProvider\n", "import { AuthMachine } from '@nhost/nhost-js'\nimport { useContext } from 'react'\nimport { InterpreterFrom } from 'xstate'\nimport { NhostReactContext } from './provider'\n\n/** @internal */\nexport const useAuthInterpreter = (): InterpreterFrom<AuthMachine> => {\n  const nhost = useContext(NhostReactContext)\n  const interpreter = nhost.auth?.client.interpreter\n  if (!interpreter)\n    throw Error('Could not find the Nhost auth client. Did you wrap your app in <NhostProvider />?')\n  return interpreter\n}\n", "import { ErrorPayload } from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use `useAuthenticationStatus` to get the authentication status for the user.\n *\n * @example\n * ```tsx\n * const { isAuthenticated, isLoading } = useAuthenticationStatus();\n * ```\n */\nexport const useAuthenticationStatus = (): {\n  isAuthenticated: boolean\n  isLoading: boolean\n  error: ErrorPayload | null\n  isError: boolean\n  connectionAttempts: number\n} => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => ({\n      isAuthenticated: state.matches({ authentication: 'signedIn' }),\n      isLoading: state.hasTag('loading'),\n      error: state.context.errors.authentication || null,\n      isError: state.matches({ authentication: { signedOut: 'failed' } }),\n      connectionAttempts: state.context.importTokenAttempts\n    }),\n    (a, b) =>\n      a.isAuthenticated === b.isAuthenticated &&\n      a.isLoading === b.isLoading &&\n      a.connectionAttempts === b.connectionAttempts\n  )\n}\n", "import { Fragment, PropsWithChildren, createElement } from 'react'\nimport { useAuthenticationStatus } from '../useAuthenticationStatus'\n\n/**\n * Use `<SignedIn />` to control the rendering of components for users. Components inside `<SignedIn />` are only rendered if the user is authenticated.\n *\n * @example\n * ```tsx\n * import { NhostProvider, SignedIn } from \"@nhost/react\";\n * import { nhost } from '@/utils/nhost';\n *\n * function Page() {\n *   return (\n *     <NhostProvider nhost={nhost}>\n *       <SignedIn>\n *         <h1>Only rendered if the user is authenticated</h1>\n *       </SignedIn>\n *     </NhostProvider>\n *   )\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/signed-in\n * @category Components\n */\n\nexport function SignedIn({ children }: PropsWithChildren<unknown>) {\n  const { isAuthenticated } = useAuthenticationStatus()\n\n  if (!isAuthenticated) {\n    return null\n  }\n\n  return createElement(Fragment, null, children)\n}\n", "import { Fragment, PropsWithChildren, createElement } from 'react'\nimport { useAuthenticationStatus } from '../useAuthenticationStatus'\n\n/**\n * Use `<SignedOut />` to control the rendering of components for users. Components inside `<SignedOut />` are only rendered if the user is not authenticated.\n *\n * @example\n * ```tsx\n * import { NhostProvider, SignedOut } from \"@nhost/react\";\n * import { nhost } from '@/utils/nhost';\n *\n * function Page() {\n *   return (\n *     <NhostProvider nhost={nhost}>\n *       <SignedOut>\n *         <h1>Only rendered if the user is not authenticated</h1>\n *       </SignedOut>\n *     </NhostProvider>\n *   )\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/signed-out\n * @category Components\n */\n\nexport function SignedOut({ children }: PropsWithChildren<unknown>) {\n  const { isAuthenticated } = useAuthenticationStatus()\n\n  if (isAuthenticated) {\n    return null\n  }\n\n  return createElement(Fragment, null, children)\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use `useAccessToken` to get the access token of the user.\n *\n * @example\n * ```ts\n * const accessToken = useAccessToken();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-access-token\n */\nexport const useAccessToken = (): string | null => {\n  const service = useAuthInterpreter()\n  return useSelector(service, (state) => state.context.accessToken.value)\n}\n", "import { useContext } from 'react'\n\nimport { NhostClient } from '@nhost/nhost-js'\n\nimport { NhostReactContext } from './provider'\n\n/**\n * Use the hook `useNhostClient` to get the Nhost JavaScript client (https://docs.nhost.io/reference/javascript).\n *\n * @example\n * ```tsx\n * const nhost = useNhostClient()\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-nhost-client\n */\nexport const useNhostClient = (): NhostClient => {\n  const nhost = useContext(NhostReactContext)\n  return nhost\n}\n", "import {\n  ActionErrorState,\n  ActionSuccessState,\n  AddSecurityKeyHandlerResult,\n  addSecurityKeyPromise,\n  ErrorPayload\n} from '@nhost/nhost-js'\nimport { useState } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface AddSecurityKeyHandler {\n  (\n    /** Optional human-readable name of the security key */\n    nickname?: string\n  ): Promise<AddSecurityKeyHandlerResult>\n}\n\nexport interface AddSecuritKeyHookResult extends ActionErrorState, ActionSuccessState {\n  /** Add a security key to the current user with the WebAuthn API */\n  add: AddSecurityKeyHandler\n}\n\ninterface AddSecuritKeyHook {\n  (): AddSecuritKeyHookResult\n}\n\n/**\n * Use the hook `useAddSecurityKey` to add a WebAuthn security key.\n *\n * @example\n * ```tsx\n * const { add, isLoading, isSuccess, isError, error } = useAddSecurityKey()\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await add('key nickname')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-add-security-key\n */\nexport const useAddSecurityKey: AddSecuritKeyHook = () => {\n  const nhost = useNhostClient()\n  const [error, setError] = useState<ErrorPayload | null>(null)\n  const isSuccess = !error\n  const isError = !!error\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  const add: AddSecurityKeyHandler = async (nickname) => {\n    setIsLoading(true)\n    const result = await addSecurityKeyPromise(nhost.auth.client, nickname)\n    const { error } = result\n    if (error) {\n      setError(error)\n    }\n    setIsLoading(false)\n    return result\n  }\n\n  return { add, isLoading, isSuccess, isError, error }\n}\n", "import { useEffect, useState } from 'react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use `useAuthenticated` to get the authentication status of the user.\n *\n * @example\n * ```ts\n * const isAuthenticated = useAuthenticated();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-access-token\n */\nexport const useAuthenticated = (): boolean => {\n  const service = useAuthInterpreter()\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    !!service.status && service.getSnapshot().matches({ authentication: 'signedIn' })\n  )\n  useEffect(() => {\n    const subscription = service.subscribe((state) => {\n      const newValue = state.matches({ authentication: 'signedIn' })\n      setIsAuthenticated(newValue)\n    })\n    return subscription.unsubscribe\n  }, [service])\n  return isAuthenticated\n}\n", "import {\n  ChangeEmailHandlerResult,\n  ChangeEmailOptions,\n  changeEmailPromise,\n  ChangeEmailState,\n  createChangeEmailMachine\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { useCallback, useMemo } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface ChangeEmailHandler {\n  (email: string, options?: ChangeEmailOptions): Promise<ChangeEmailHandlerResult>\n}\n\nexport interface ChangeEmailHookResult extends ChangeEmailState {\n  /** Requests the email change. Returns a promise with the current context  */\n  changeEmail: ChangeEmailHandler\n}\n\n/**\n * Use the hook `useChangeEmail` to change email for the user.\n *\n * @example\n * ```tsx\n * const { changeEmail, isLoading, needsEmailVerification, isError, error } = useChangeEmail();\n *\n * console.log({ isLoading, needsEmailVerification, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await changeEmail('new@example.com')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-change-email\n */\nexport function useChangeEmail(options?: ChangeEmailOptions) {\n  const nhost = useNhostClient()\n  const machine = useMemo(() => createChangeEmailMachine(nhost.auth.client), [nhost])\n\n  const service = useInterpret(machine)\n\n  const isLoading = useSelector(service, (s) => s.matches('requesting'))\n  const error = useSelector(service, (state) => state.context.error)\n  const isError = useSelector(service, (state) => state.matches('idle.error'))\n  const needsEmailVerification = useSelector(service, (state) => state.matches('idle.success'))\n\n  const changeEmail: ChangeEmailHandler = useCallback(\n    async (valueEmail, valueOptions = options) =>\n      changeEmailPromise(service, valueEmail, valueOptions),\n    [service, options]\n  )\n\n  return { changeEmail, isLoading, needsEmailVerification, isError, error }\n}\n", "import {\n  ActionErrorState,\n  ActionLoadingState,\n  ActionSuccessState,\n  ChangePasswordHandlerResult,\n  changePasswordPromise,\n  createChangePasswordMachine\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { useMemo } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface ChangePasswordHandler {\n  (password: string): Promise<ChangePasswordHandlerResult>\n}\n\nexport interface ChangePasswordHookResult extends ActionErrorState, ActionLoadingState, ActionSuccessState {\n  /** Requests the password change. Returns a promise with the current context */\n  changePassword: ChangePasswordHandler\n}\n\ninterface ChangePasswordHook {\n  (): ChangePasswordHookResult\n}\n\n/**\n * Use the hook `useChangePassword` to change password for the user.\n *\n * @example\n * ```tsx\n * const { changePassword, isLoading, isSuccess, isError, error } = useChangePassword();\n *\n * console.log({ isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await changePassword('my-new-password')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-change-password\n */\nexport const useChangePassword: ChangePasswordHook = () => {\n  const nhost = useNhostClient()\n  const machine = useMemo(() => createChangePasswordMachine(nhost.auth.client), [nhost])\n  const service = useInterpret(machine)\n\n  const isError = useSelector(service, (state) => state.matches({ idle: 'error' }))\n  const isSuccess = useSelector(service, (state) => state.matches({ idle: 'success' }))\n  const error = useSelector(service, (state) => state.context.error)\n  const isLoading = useSelector(service, (state) => state.matches('requesting'))\n\n  const changePassword: ChangePasswordHandler = (valuePassword) =>\n    changePasswordPromise(service, valuePassword)\n\n  return { changePassword, isLoading, isSuccess, isError, error }\n}\n", "import {\n  ActivateMfaHandlerResult,\n  activateMfaPromise,\n  ActivateMfaState,\n  createEnableMfaMachine,\n  DisableMfaHandlerResult,\n  disableMfaPromise,\n  GenerateQrCodeHandlerResult,\n  generateQrCodePromise,\n  GenerateQrCodeState\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { useMemo } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface ConfigMfaState extends ActivateMfaState, GenerateQrCodeState {\n  generateQrCode: () => Promise<GenerateQrCodeHandlerResult>\n  activateMfa: (code: string) => Promise<ActivateMfaHandlerResult>\n  disableMfa: (code: string) => Promise<DisableMfaHandlerResult>\n  isDisabling: boolean\n}\n\n// TODO documentation when available in Nhost Cloud - see changelog\nexport const useConfigMfa = (): ConfigMfaState => {\n  const nhost = useNhostClient()\n\n  const machine = useMemo(() => createEnableMfaMachine(nhost.auth.client), [nhost])\n  const service = useInterpret(machine)\n\n  const isError = useSelector(\n    service,\n    (state) => state.matches({ idle: 'error' }) || state.matches({ generated: { idle: 'error' } })\n  )\n  const isGenerating = useSelector(service, (state) => state.matches('generating'))\n  const isGenerated = useSelector(service, (state) => state.matches('generated'))\n  const isActivating = useSelector(service, (state) => state.matches({ generated: 'activating' }))\n  const isActivated = useSelector(service, (state) => state.matches({ generated: 'activated' }))\n  const isDisabling = useSelector(service, (state) => state.matches('disabling'))\n  const error = useSelector(service, (state) => state.context.error)\n  const qrCodeDataUrl = useSelector(service, (state) => state.context.imageUrl || '')\n  const totpSecret = useSelector(service, (state) => state.context.secret || '')\n\n  const generateQrCode = () => generateQrCodePromise(service)\n\n  const activateMfa = (code: string) => activateMfaPromise(service, code)\n  const disableMfa = (code: string) => disableMfaPromise(service, code)\n\n  return {\n    generateQrCode,\n    isGenerating,\n    qrCodeDataUrl,\n    isGenerated,\n    activateMfa,\n    isActivating,\n    isActivated,\n    isDisabling,\n    isError,\n    error,\n    disableMfa,\n    totpSecret\n  }\n}\n", "import { JWTClaims } from '@nhost/nhost-js'\nimport { jwtDecode } from 'jwt-decode'\nimport { useAccessToken } from './useAccessToken'\n\n/**\n * Use the hook `useDecodedAccessToken` to get the decoded access token of the user.\n *\n * @example\n * ```tsx\n * const decodedAccessToken = useDecodedAccessToken()\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-decoded-access-token\n */\nexport const useDecodedAccessToken = (): JWTClaims | null => {\n  const jwt = useAccessToken()\n  return jwt ? jwtDecode<JWTClaims>(jwt) : null\n}\n", "import {\n  createFileUploadMachine,\n  FileItemRef,\n  FileUploadMachine,\n  FileUploadState,\n  StorageUploadFileParams,\n  UploadFileHandlerResult,\n  uploadFilePromise\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { InterpreterFrom } from 'xstate'\nimport { useNhostClient } from './useNhostClient'\n\nexport interface FileUploadHookResult extends FileUploadState {\n  /**\n   * Add the file without uploading it.\n   */\n  add: (params: StorageUploadFileParams) => void\n\n  /**\n   * Upload the file given as a parameter, or that has been previously added.\n   */\n  upload: (params: Partial<StorageUploadFileParams>) => Promise<UploadFileHandlerResult>\n\n  /**\n   * Cancel the ongoing upload.\n   */\n  cancel: () => void\n\n  /**\n   * @internal - used by the MultipleFilesUpload component to notice the file should be removed from the list.\n   */\n  destroy: () => void\n}\n\nexport type { FileItemRef }\n\n/**\n * Use the hook `useFileUploadItem` to control the file upload of a file in a multiple file upload.\n *\n * It has the same signature as `useFileUpload`.\n *\n * @example\n * ```tsx\n * const Item = ({itemRef}) => {\n *    const { name, progress} = useFileUploadItem(itemRef)\n *    return <li>{name} {progress}</li>\n * }\n *\n * const List = () => {\n *    const { list } = useMultipleFilesUpload()\n *    return <ul>\n *            {list.map((itemRef) => <Item key={item.id} itemRef={item} />)}\n *           </ul>\n * }\n *\n * ```\n */\nexport const useFileUploadItem = (\n  ref: FileItemRef | InterpreterFrom<FileUploadMachine>\n): FileUploadHookResult => {\n  const nhost = useNhostClient()\n\n  const add = (params: StorageUploadFileParams) => {\n    ref.send({\n      type: 'ADD',\n      file: params.file,\n      bucketId: params.bucketId || bucketId\n    })\n  }\n\n  const upload = (params: Partial<StorageUploadFileParams>) =>\n    uploadFilePromise(\n      {\n        url: nhost.storage.url,\n        accessToken: nhost.auth.getAccessToken(),\n        adminSecret: nhost.adminSecret,\n        ...params\n      },\n      ref\n    )\n\n  const cancel = () => {\n    ref.send('CANCEL')\n  }\n\n  const destroy = () => {\n    ref.send('DESTROY')\n  }\n\n  const isUploading = useSelector(ref, (state) => state.matches('uploading'))\n  const isUploaded = useSelector(ref, (state) => state.matches('uploaded'))\n  const isError = useSelector(ref, (state) => state.matches('error'))\n  const error = useSelector(ref, (state) => state.context.error || null)\n  const progress = useSelector(ref, (state) => state.context.progress)\n  const id = useSelector(ref, (state) => state.context.id)\n  const bucketId = useSelector(ref, (state) => state.context.bucketId)\n  const name = useSelector(ref, (state) => state.context.file?.name)\n\n  return {\n    add,\n    upload,\n    cancel,\n    destroy,\n    isUploaded,\n    isUploading,\n    isError,\n    error,\n    progress,\n    id,\n    bucketId,\n    name\n  }\n}\n\n/**\n * Use the hook `useFileUpload` to upload a file.\n *\n * @example\n * ```tsx\n * const {  add,\n *  upload,\n *  cancel,\n *  isUploaded,\n *  isUploading,\n *  isError,\n *  progress,\n *  id,\n *  bucketId,\n *  name\n * } = useFileUpload();\n *\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await upload({ file })\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-file-upload\n */\nexport const useFileUpload = (): FileUploadHookResult => {\n  const service = useInterpret(createFileUploadMachine)\n\n  return useFileUploadItem(service)\n}\n", "import { JWTHasuraClaims } from '@nhost/nhost-js'\nimport { useDecodedAccessToken } from './useDecodedAccessToken'\n\n/**\n * Use the hook `useHasuraClaims` to get the Hasura claims of the user.\n *\n * @example\n * ```tsx\n * const hasuraClaims = useHasuraClaims()\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-hasura-claims\n */\nexport const useHasuraClaims = (): JWTHasuraClaims | null => {\n  const claims = useDecodedAccessToken()\n  return claims?.['https://hasura.io/jwt/claims'] || null\n}\n", "import { useHasuraClaims } from './useHasuraClaims'\n\n/**\n * Use the hook `useHasuraClaim` to get the value of a specific Hasura claim of the user.\n *\n * @example\n * ```tsx\n * // if `x-hasura-company-id` exists as a custom claim\n * const companyId = useHasuraClaim('company-id')\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-hasura-claim\n */\nexport const useHasuraClaim = (name: string): string | string[] | null => {\n  const hasuraClaims = useHasuraClaims()\n  return hasuraClaims?.[name.startsWith('x-hasura-') ? name : `x-hasura-${name}`] || null\n}\n", "import {\n  createMultipleFilesUploadMachine,\n  FileItemRef,\n  MultipleFilesHandlerResult,\n  MultipleFilesUploadState,\n  UploadMultipleFilesActionParams,\n  uploadMultipleFilesPromise\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { useState } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\nexport interface MultipleFilesHookResult extends MultipleFilesUploadState {\n  /**\n   * Add one or multiple files to add to the list of files to upload.\n   */\n  add: (\n    params: Required<Pick<UploadMultipleFilesActionParams, 'files'>> &\n      UploadMultipleFilesActionParams\n  ) => void\n  /**\n   * Upload the files that has been previously added to the list.\n   */\n  upload: (params?: UploadMultipleFilesActionParams) => Promise<MultipleFilesHandlerResult>\n  /**\n   * Cancel the ongoing upload. The files that have been successfully uploaded will not be deleted from the server.\n   */\n  cancel: () => void\n  /**\n   * Clear the list of files.\n   */\n  clear: () => void\n}\n\n/**\n * Use the hook `useMultipleFilesUpload` to upload multiple files.\n *\n * @example\n * ```tsx\n * const { upload, add, clear, progress, isUploaded, isUploading, files, isError, cancel } = useMultipleFilesUpload()\n *\n * const addFile = async (files: File | File[] | FileList) => {\n *   add({ files })\n * }\n *\n * const handleSubmit = async (e) => {\n *   e.preventDefault();\n *   upload()\n * }\n * ```\n * @docs https://docs.nhost.io/reference/react/use-multiple-files-upload\n */\nexport const useMultipleFilesUpload = (): MultipleFilesHookResult => {\n  const nhost = useNhostClient()\n\n  const [errors, setErrors] = useState<FileItemRef[]>([])\n  const service = useInterpret(createMultipleFilesUploadMachine, {}, (state) => {\n    if (state.event.type === 'UPLOAD_ERROR') {\n      setErrors(state.context.files.filter((ref) => ref.getSnapshot()?.context.error))\n    } else if ((state.matches('uploaded') || state.event.type === 'CLEAR') && errors.length > 0) {\n      setErrors([])\n    }\n  })\n\n  const add = (\n    params: Required<Pick<UploadMultipleFilesActionParams, 'files'>> &\n      UploadMultipleFilesActionParams\n  ) => {\n    service.send({ type: 'ADD', ...params })\n  }\n\n  const upload = (params?: UploadMultipleFilesActionParams) =>\n    uploadMultipleFilesPromise(\n      {\n        url: nhost.storage.url,\n        accessToken: nhost.auth.getAccessToken(),\n        adminSecret: nhost.adminSecret,\n        ...params\n      },\n      service\n    )\n\n  const cancel = () => {\n    service.send('CANCEL')\n  }\n\n  const clear = () => {\n    service.send('CLEAR')\n  }\n\n  const isUploading = useSelector(service, (state) => state.matches('uploading'))\n  const isUploaded = useSelector(service, (state) => state.matches('uploaded'))\n  const isError = useSelector(service, (state) => state.matches('error'))\n\n  const progress = useSelector(service, (state) => state.context.progress)\n  const files = useSelector(service, (state) => state.context.files)\n\n  return {\n    upload,\n    add,\n    clear,\n    cancel,\n    progress,\n    isUploaded,\n    isUploading,\n    files,\n    isError,\n    errors\n  }\n}\n", "import {\n  encodeQueryParameters,\n  Provider,\n  ProviderOptions,\n  rewriteRedirectTo\n} from '@nhost/nhost-js'\nimport { useContext, useEffect, useState } from 'react'\nimport { NhostReactContext } from './provider'\nimport { useAccessToken } from './useAccessToken'\n\n/**\n *  Use the hook `useProviderLink` to get an OAuth provider URL that can be used to sign in users.\n *\n * @example\n * ```js\n * const providerLink = useProviderLink();\n * ```\n *\n * @example\n *\n *  Pass in the `connect` option to connect the user's account to the OAuth provider when different emails are used.\n *\n * ```js\n * const providerLink = useProviderLink({ connect: true });\n * ```\n *\n * @example\n * ```jsx\n * import { useProviderLink } from '@nhost/react';\n *\n * const Component = () => {\n *   const { facebook, github } = useProviderLink();\n *\n *   return (\n *     <div>\n *       <a href={facebook}>Sign in with Facebook</a>\n *       <a href={github}>Sign in with GitHub</a>\n *     </div>\n *   );\n * };\n * ```\n */\nexport const useProviderLink = (options?: ProviderOptions): Record<Provider, string> => {\n  /**\n   * @internal When using Nextjs or any SSR framework, nhost.auth.client.clientUrl will be set to `undefined`\n   * as its value is set to window.location.origin.\n   * This is because the request context is not available when setting up the client `new NhostClient()` outside of\n   * the React/Nextjs context.\n   */\n  const [isSSR, setIsSSR] = useState(true)\n  const accessToken = useAccessToken()\n\n  useEffect(() => {\n    setIsSSR(false)\n  }, [])\n\n  const nhost = useContext(NhostReactContext)\n\n  return new Proxy({} as Record<Provider, string>, {\n    get(_, provider: string) {\n      let providerLink = `${nhost.auth.client.backendUrl}/signin/provider/${provider}`\n\n      const connectOptions = options?.connect ? { connect: accessToken } : {}\n\n      return encodeQueryParameters(\n        providerLink,\n        rewriteRedirectTo(isSSR ? undefined : nhost.auth.client.clientUrl, {\n          ...options,\n          ...connectOptions\n        } as any)\n      )\n    }\n  })\n}\n", "import {\n  createResetPasswordMachine,\n  ResetPasswordHandlerResult,\n  ResetPasswordOptions,\n  resetPasswordPromise,\n  ResetPasswordState\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { useMemo } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface ResetPasswordHandler {\n  (email: string, options?: ResetPasswordOptions): Promise<ResetPasswordHandlerResult>\n}\n\nexport interface ResetPasswordHookResult extends ResetPasswordState {\n  /**\n   * Sends an email with a temporary connection link. Returns a promise with the current context\n   */\n  resetPassword: ResetPasswordHandler\n}\n\ninterface ResetPasswordHook {\n  (options?: ResetPasswordOptions): ResetPasswordHookResult\n}\n\n/**\n * Use the hook `useResetPassword` to reset the password for a user. This will send a reset password link in an email to the user. When the user clicks on the reset-password link the user is automatically signed in and can change their password using the hook `useChangePassword`.\n *\n * @example\n * ```tsx\n * const { resetPassword, isLoading, isSent, isError, error } = useResetPassword();\n *\n * console.log({ isLoading, isSent, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await resetPassword('joe@example.com', {\n *     redirectTo: 'http://localhost:3000/settings/change-password'\n *   })\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-reset-password\n */\nexport const useResetPassword: ResetPasswordHook = (options) => {\n  const nhost = useNhostClient()\n  const machine = useMemo(() => createResetPasswordMachine(nhost.auth.client), [nhost])\n  const service = useInterpret(machine)\n\n  const isLoading = useSelector(service, (s) => s.matches('requesting'))\n  const error = useSelector(service, (state) => state.context.error)\n  const isError = useSelector(service, (state) => state.matches('idle.error'))\n  const isSent = useSelector(service, (state) => state.matches('idle.success'))\n\n  const resetPassword: ResetPasswordHandler = (valueEmail, valueOptions = options) =>\n    resetPasswordPromise(service, valueEmail, valueOptions)\n\n  return { resetPassword, isLoading, isSent, isError, error }\n}\n", "import {\n  createSendVerificationEmailMachine,\n  SendVerificationEmailHandlerResult,\n  SendVerificationEmailOptions,\n  sendVerificationEmailPromise,\n  SendVerificationEmailState\n} from '@nhost/nhost-js'\nimport { useInterpret, useSelector } from '@xstate/react'\nimport { useMemo } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface SendVerificationEmailHandler {\n  (\n    email: string,\n    options?: SendVerificationEmailOptions\n  ): Promise<SendVerificationEmailHandlerResult>\n}\n\nexport interface SendVerificationEmailHookResult extends SendVerificationEmailState {\n  /** Resend the verification email. Returns a promise with the current context */\n  sendEmail: SendVerificationEmailHandler\n}\n\ninterface SendVerificationEmailHook {\n  (options?: SendVerificationEmailOptions): SendVerificationEmailHookResult\n}\n\n/**\n * Use the hook `useSendVerificationEmail` to send a verification email. The verification email is sent to the user's email address and includes a link to verify the email address.\n *\n * @example\n * ```tsx\n * const { sendEmail, isLoading, isSent, isError, error } =\n  useSendVerificationEmail();\n *\n * console.log({ isLoading, isSent, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await sendEmail({\n *     email: 'joe@example.com',\n *   })\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-send-verification-email\n */\nexport const useSendVerificationEmail: SendVerificationEmailHook = (options) => {\n  const nhost = useNhostClient()\n  const machine = useMemo(() => createSendVerificationEmailMachine(nhost.auth.client), [nhost])\n  const service = useInterpret(machine)\n  const isError = useSelector(service, (state) => state.matches({ idle: 'error' }))\n  const isSent = useSelector(service, (state) => state.matches({ idle: 'success' }))\n  const error = useSelector(service, (state) => state.context.error)\n  const isLoading = useSelector(service, (state) => state.matches('requesting'))\n\n  const sendEmail: SendVerificationEmailHandler = (valueEmail, valueOptions = options) =>\n    sendVerificationEmailPromise(service, valueEmail, valueOptions)\n\n  return { sendEmail, isLoading, isSent, isError, error }\n}\n", "import { signInAnonymousPromise } from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useSignInAnonymous` to sign in a user anonymously.\n *\n * As a result, the user will have the `anonymous` role and subsequent set of permissions.\n * The user can then be converted to a regular user at a later stage using email+password sign-up, passwordless email (magic link), or passwordless SMS.\n *\n * @example\n * ```tsx\n * const { signInAnonymous, isLoading, isSuccess, isError, error } = useSignInAnonymous()\n *\n * console.log({ isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInAnonymous();\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-anonymous\n */\nexport const useSignInAnonymous = () => {\n  const service = useAuthInterpreter()\n  const signInAnonymous = () => signInAnonymousPromise(service)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.authentication || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isLoading = useSelector(service, (state) =>\n    state.matches({ authentication: { authenticating: 'anonymous' } })\n  )\n  const isSuccess = useSelector(service, (state) =>\n    state.matches({\n      authentication: 'signedIn'\n    })\n  )\n  const isError = useSelector(service, (state) =>\n    state.matches({ authentication: { signedOut: 'failed' } })\n  )\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n  return { accessToken, error, isError, isLoading, isSuccess, signInAnonymous, user }\n}\n", "import {\n  SignInEmailPasswordHandlerResult,\n  signInEmailPasswordPromise,\n  SignInEmailPasswordState,\n  SignInMfaTotpHandlerResult,\n  signInMfaTotpPromise\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ninterface SignInEmailPasswordHandler {\n  (email: string, password: string): Promise<SignInEmailPasswordHandlerResult>\n}\n\nexport interface SendMfaOtpHandler {\n  (otp: string): Promise<SignInMfaTotpHandlerResult>\n}\n\nexport interface SignInEmailPasswordHookResult extends SignInEmailPasswordState {\n  signInEmailPassword: SignInEmailPasswordHandler\n  sendMfaOtp: SendMfaOtpHandler\n}\n\ninterface SignInEmailPasswordHook {\n  (): SignInEmailPasswordHookResult\n}\n\n// TODO: Add MFA example once MFA is available at Nhost Cloud.\n/**\n * Use the hook `useSignInEmailPassword` to sign in a user using email and password.\n *\n * @example\n * ```tsx\n * const { signInEmailPassword, needsEmailVerification, isLoading, isSuccess, isError, error } = useSignInEmailPassword()\n *\n * console.log({ needsEmailVerification, isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInEmailPassword('joe@example.com','secret-password')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-email-password\n */\nexport const useSignInEmailPassword: SignInEmailPasswordHook = () => {\n  const service = useAuthInterpreter()\n  const signInEmailPassword: SignInEmailPasswordHandler = (email, password) =>\n    signInEmailPasswordPromise(service, email, password)\n\n  const sendMfaOtp: SendMfaOtpHandler = (otp) => signInMfaTotpPromise(service, otp)\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.authentication || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isSuccess = useSelector(service, (state) =>\n    state.matches({\n      authentication: 'signedIn'\n    })\n  )\n  const isLoading = useSelector(\n    service,\n    (state) => state.matches({ authentication: { authenticating: 'password' } }),\n    (a, b) => a === b\n  )\n  const needsEmailVerification = useSelector(\n    service,\n    (state) =>\n      state.matches({\n        authentication: { signedOut: 'noErrors' },\n        registration: { incomplete: 'needsEmailVerification' }\n      }),\n    (a, b) => a === b\n  )\n\n  const needsMfaOtp = useSelector(service, (state) => state.context.mfa !== null)\n\n  const isError = useSelector(\n    service,\n    (state) => state.matches({ authentication: { signedOut: 'failed' } }),\n    (a, b) => a === b\n  )\n\n  const mfa = useSelector(service, (state) => state.context.mfa)\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    needsEmailVerification,\n    needsMfaOtp,\n    mfa,\n    sendMfaOtp,\n    signInEmailPassword,\n    user\n  }\n}\n", "import {\n  ActionErrorState,\n  ActionLoadingState,\n  ActionSuccessState,\n  PasswordlessOptions,\n  SignInEmailPasswordlessHandlerResult,\n  signInEmailPasswordlessPromise\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ninterface SignInEmailPasswordlessHandler {\n  (email: string, options?: PasswordlessOptions): Promise<SignInEmailPasswordlessHandlerResult>\n}\n\nexport interface SignInEmailPasswordlessHookResult\n  extends ActionLoadingState,\n    ActionSuccessState,\n    ActionErrorState {\n  /** Sends a magic link to the given email */\n  signInEmailPasswordless: SignInEmailPasswordlessHandler\n}\n\n/**\n * Use the hook `useSignInEmailPasswordless` to sign in a user using passwordless email (Magic Link).\n *\n * @example\n * ```tsx\n * const { signInEmailPasswordless, isLoading, isSuccess, isError, error } = useSignInEmailPasswordless()\n *\n * console.log({ isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInEmailPasswordless('joe@example.com');\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-email-passwordless\n */\nexport function useSignInEmailPasswordless(\n  options?: PasswordlessOptions\n): SignInEmailPasswordlessHookResult {\n  const service = useAuthInterpreter()\n\n  const signInEmailPasswordless: SignInEmailPasswordlessHandler = (\n    valueEmail,\n    valueOptions = options\n  ) => signInEmailPasswordlessPromise(service, valueEmail, valueOptions)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.registration || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isLoading = useSelector(service, (state) => state.matches('registration.passwordlessEmail'))\n\n  const isSuccess = useSelector(service, (state) =>\n    state.matches('registration.incomplete.needsEmailVerification')\n  )\n\n  const isError = useSelector(service, (state) => state.matches('registration.incomplete.failed'))\n\n  return { signInEmailPasswordless, isLoading, isSuccess, isError, error }\n}\n", "import {\n  signInEmailSecurityKeyPromise,\n  SignInSecurityKeyPasswordlessHandlerResult,\n  SignInSecurityKeyPasswordlessState\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ninterface SignInSecurityKeyPasswordlessHandler {\n  (email: string): Promise<SignInSecurityKeyPasswordlessHandlerResult>\n}\n\nexport interface SignInSecurityKeyPasswordlessHookResult\n  extends SignInSecurityKeyPasswordlessState {\n  signInEmailSecurityKey: SignInSecurityKeyPasswordlessHandler\n}\n\ninterface SignInSecurityKeyPasswordlessHook {\n  (): SignInSecurityKeyPasswordlessHookResult\n}\n\n/**\n * Use the hook `useSignInEmailSecurityKey` to sign in a user using their email and a security key using the WebAuthn API.\n *\n * @example\n * ```tsx\n * const { signInEmailSecurityKey, needsEmailVerification, isLoading, isSuccess, isError, error } = useSignInEmailSecurityKey()\n *\n * console.log({ needsEmailVerification, isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInEmailSecurityKey('joe@example.com')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-web-authn\n */\nexport const useSignInEmailSecurityKey: SignInSecurityKeyPasswordlessHook = () => {\n  const service = useAuthInterpreter()\n  const signInEmailSecurityKey: SignInSecurityKeyPasswordlessHandler = (email: string) =>\n    signInEmailSecurityKeyPromise(service, email)\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.authentication || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isSuccess = useSelector(service, (state) =>\n    state.matches({\n      authentication: 'signedIn'\n    })\n  )\n  const isLoading = useSelector(\n    service,\n    (state) => state.matches({ authentication: { authenticating: 'securityKeyEmail' } }),\n    (a, b) => a === b\n  )\n  const needsEmailVerification = useSelector(\n    service,\n    (state) =>\n      state.matches({\n        authentication: { signedOut: 'noErrors' },\n        registration: { incomplete: 'needsEmailVerification' }\n      }),\n    (a, b) => a === b\n  )\n  const isError = useSelector(\n    service,\n    (state) => state.matches({ authentication: { signedOut: 'failed' } }),\n    (a, b) => a === b\n  )\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    needsEmailVerification,\n    signInEmailSecurityKey,\n    user\n  }\n}\n", "import { User } from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserData` to get the user data of the user.\n *\n * @example\n * ```tsx\n * const userData = useUserData();\n * ```\n * \n   * @example Example of user data\n```json\n{\n  \"avatarUrl\": \"https://s.gravatar.com/avatar\",\n  \"createdAt\": \"2022-04-11T16:33:14.780439+00:00\",\n  \"defaultRole\": \"user\",\n  \"displayName\": \"John Doe\",\n  \"email\": \"john@nhost.io\",\n  \"id\": \"05e054c7-a722-42e7-90a6-3f77a2f118c8\",\n  \"isAnonymous\": false,\n  \"locale\": \"en\",\n  \"metadata\": {\n    \"lastName\": \"Doe\",\n    \"firstName\": \"John\"\n  },\n  \"roles\": [\"user\", \"me\"]\n}\n```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-data\n */\nexport const useUserData = (): User | null => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => (a && JSON.stringify(a)) === (b && JSON.stringify(b))\n  )\n}\n", "import {\n  elevateEmailSecurityKeyPromise,\n  ElevateWithSecurityKeyHandlerResult\n} from '@nhost/nhost-js'\nimport { useEffect, useState } from 'react'\nimport { useHasuraClaims } from './useHasuraClaims'\nimport { useNhostClient } from './useNhostClient'\nimport { useUserData } from './useUserData'\n\ninterface ElevateWithSecurityKeyHandler {\n  (email: string): Promise<ElevateWithSecurityKeyHandlerResult>\n}\n\ninterface ElevateWithSecurityKeyHook {\n  elevateEmailSecurityKey: ElevateWithSecurityKeyHandler\n  elevated: boolean\n}\n\n/**\n * Use the hook `useElevateSecurityKeyEmail` to elevate the user auth permission in order to perform sensitive operations\n *\n * @example\n * ```tsx\n * const { elevateEmailSecurityKey, elevated } = useElevateSecurityKeyEmail()\n *\n * console.log({ elevated });\n *\n * await elevateEmailSecurityKey('joe@example.com')\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/elevate-web-authn\n */\nexport const useElevateSecurityKeyEmail = (): ElevateWithSecurityKeyHook => {\n  const user = useUserData()\n  const nhost = useNhostClient()\n  const claims = useHasuraClaims()\n\n  const hasElevatedClaim = user ? claims?.['x-hasura-auth-elevated'] === user?.id : false\n\n  const [elevated, setElevated] = useState(!!hasElevatedClaim)\n\n  const elevateEmailSecurityKey: ElevateWithSecurityKeyHandler = (email: string) =>\n    elevateEmailSecurityKeyPromise(nhost.auth.client, email)\n\n  useEffect(() => {\n    setElevated(!!hasElevatedClaim)\n  }, [hasElevatedClaim])\n\n  return {\n    elevated,\n    elevateEmailSecurityKey\n  }\n}\n", "import { SignInPATHandlerResult, SignInPATState, signInPATPromise } from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ninterface SignInPATHandler {\n  (pat: string): Promise<SignInPATHandlerResult>\n}\n\nexport interface SignInPATHookResult extends SignInPATState {\n  signInPAT: SignInPATHandler\n}\n\ninterface SignInPATHook {\n  (): SignInPATHookResult\n}\n\n/**\n * Use the hook `useSignInPAT` to sign in a user using a personal access token.\n *\n * @example\n * ```tsx\n * const { signInPAT, isLoading, isSuccess, isError, error } = useSignInPAT()\n *\n * console.log({ isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInPAT('8c5402d1-b05d-4825-a3ae-52d26402b89b')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-pat\n */\nexport const useSignInPAT: SignInPATHook = () => {\n  const service = useAuthInterpreter()\n  const signInPAT: SignInPATHandler = (pat: string) => signInPATPromise(service, pat)\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.authentication || null,\n    (a, b) => a?.error === b?.error\n  )\n\n  const isSuccess = useSelector(service, (state) => state.matches({ authentication: 'signedIn' }))\n\n  const isLoading = useSelector(\n    service,\n    (state) => state.matches({ authentication: { authenticating: 'password' } }),\n    (a, b) => a === b\n  )\n\n  const isError = useSelector(\n    service,\n    (state) => state.matches({ authentication: { signedOut: 'failed' } }),\n    (a, b) => a === b\n  )\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    signInPAT,\n    user\n  }\n}\n", "import {\n  PasswordlessOptions,\n  SignInSmsPasswordlessHandlerResult,\n  SignInSmsPasswordlessOtpHandlerResult,\n  signInSmsPasswordlessOtpPromise,\n  signInSmsPasswordlessPromise,\n  SignInSmsPasswordlessState\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useState } from 'react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\nexport interface SignInSmsPasswordlessHandler {\n  (phoneNumber: string, options?: PasswordlessOptions): Promise<SignInSmsPasswordlessHandlerResult>\n}\n\nexport interface SignInSmsPasswordlessOtpHandler {\n  (code: string): Promise<SignInSmsPasswordlessOtpHandlerResult>\n  (phoneNumber: string, code: string): Promise<SignInSmsPasswordlessOtpHandlerResult>\n}\n\nexport interface SignInSmsPasswordlessHookResult extends SignInSmsPasswordlessState {\n  /** Sends a one-time code to the given phoneNumber */\n  signInSmsPasswordless: SignInSmsPasswordlessHandler\n  sendOtp: SignInSmsPasswordlessOtpHandler\n}\n\n/**\n * Use the hook `useSignInSmsPasswordless` to sign in a user with a one-time password sent via SMS to a phone.\n *\n * 1. The `signInSmsPasswordless` action sends a one-time password to the given phone number.\n * 2. The client is then awaiting the OTP. `needsOtp` equals true.\n * 3. After the code is received by SMS, the client sends the code with `sendOtp`. On success, the client is authenticated, and `isSuccess` equals `true`.\n *\n * Any error is monitored through `isError` and `error`. While the `signInSmsPasswordless` and `sendOtp` actions are running, `isLoading` equals `true`.\n *\n * @example\n * ```tsx\n * const { signInSmsPasswordless, sendOtp, needsOtp, isLoading, isSuccess, isError, error } = useSignInSmsPasswordless()\n *\n * console.log({ isLoading, isSuccess, isError, error });\n *\n * const askCode = async (e) => {\n *   e.preventDefault();\n *   await signInSmsPasswordless('+32455555555');\n * }\n *\n * const sendCode = async (e) => {\n *   e.preventDefault();\n *   await sendOtp('123456');\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-sms-passwordless\n */\nexport function useSignInSmsPasswordless(\n  stateOptions?: PasswordlessOptions\n): SignInSmsPasswordlessHookResult {\n  const service = useAuthInterpreter()\n  const [_phoneNumber, setPhoneNumber] = useState('')\n\n  const signInSmsPasswordless: SignInSmsPasswordlessHandler = (\n    phoneNumber: string,\n    valueOptions = stateOptions\n  ) => {\n    setPhoneNumber(phoneNumber)\n    return signInSmsPasswordlessPromise(service, phoneNumber, valueOptions)\n  }\n\n  const sendOtp: SignInSmsPasswordlessOtpHandler = async (...args: string[]) => {\n    if (args.length === 2) {\n      const [phoneNumber, code] = args\n      return signInSmsPasswordlessOtpPromise(service, phoneNumber, code)\n    }\n    const [code] = args\n    return signInSmsPasswordlessOtpPromise(service, _phoneNumber, code)\n  }\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.registration || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isLoading = useSelector(\n    service,\n    (state) =>\n      state.matches('registration.passwordlessSms') ||\n      state.matches('registration.passwordlessSmsOtp')\n  )\n\n  const isSuccess = useSelector(service, (state) => state.matches('authentication.signedIn'))\n\n  const needsOtp = useSelector(service, (state) =>\n    state.matches('registration.incomplete.needsOtp')\n  )\n\n  const isError = useSelector(service, (state) => state.matches('registration.incomplete.failed'))\n\n  return { signInSmsPasswordless, sendOtp, isLoading, isSuccess, needsOtp, isError, error }\n}\n", "import { signOutPromise } from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useSignOut` to sign out the user.\n *\n * @example\n * ```tsx\n * import { useSignOut, useAuthenticated } from '@nhost/react'\n *\n * const Component = () => {\n *   const { signOut } = useSignOut()\n *   const isAuthenticated = useAuthenticated()\n *\n *   if (isAuthenticated) {\n *     return (\n *       <button onClick={() => signOut()}>Sign Out</button>\n *     )\n *   }\n *\n *   return <div>Not authenticated</div>\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-out\n */\nexport const useSignOut = (stateAll: boolean = false) => {\n  const service = useAuthInterpreter()\n  const signOut = (valueAll?: boolean | unknown) =>\n    signOutPromise(service, typeof valueAll === 'boolean' ? valueAll : stateAll)\n\n  const isSuccess = useSelector(\n    service,\n    (state) => state.matches({ authentication: { signedOut: 'success' } }),\n    (a, b) => a === b\n  )\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.signout || null,\n    (a, b) => a?.error === b?.error\n  )\n\n  return { signOut, isSuccess, error }\n}\n", "import {\n  signUpEmailPasswordPromise,\n  SignUpEmailPasswordState,\n  SignUpOptions,\n  RequestOptions\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ntype SignUpEmailPasswordHandlerResult = Omit<SignUpEmailPasswordState, 'isLoading'>\n\ninterface SignUpEmailPasswordHandler {\n  (\n    email: string,\n    password: string,\n    options?: SignUpOptions,\n    requestOptions?: RequestOptions\n  ): Promise<SignUpEmailPasswordHandlerResult>\n}\n\nexport interface SignUpEmailPasswordHookResult extends SignUpEmailPasswordState {\n  /** Used for a new user to sign up. Returns a promise with the current context */\n  signUpEmailPassword: SignUpEmailPasswordHandler\n}\n\ninterface SignUpEmailPasswordHook {\n  (options?: SignUpOptions): SignUpEmailPasswordHookResult\n}\n\n/**\n * Use the hook `useSignUpEmailPassword` to sign up a user using email and password.\n *\n * @example\n * ```tsx\n * const { signUpEmailPassword, needsEmailVerification, isLoading, isSuccess, isError, error } = useSignUpEmailPassword()\n *\n * console.log({ needsEmailVerification, isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signUpEmailPassword('joe@example.com','secret-password')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-up-email-password\n */\nexport const useSignUpEmailPassword: SignUpEmailPasswordHook = (options) => {\n  const service = useAuthInterpreter()\n  const isError = useSelector(service, (state) => !!state.context.errors.registration)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.registration || null,\n    (a, b) => a?.error === b?.error\n  )\n\n  const isLoading = useSelector(service, (state) => state.matches('registration.emailPassword'))\n\n  const needsEmailVerification = useSelector(service, (state) =>\n    state.matches('registration.incomplete.needsEmailVerification')\n  )\n\n  const isSuccess = useSelector(service, (state) =>\n    state.matches({\n      authentication: 'signedIn',\n      registration: 'complete'\n    })\n  )\n\n  const signUpEmailPassword: SignUpEmailPasswordHandler = (\n    email,\n    password,\n    valueOptions = options,\n    requestOptions\n  ) => signUpEmailPasswordPromise(service, email, password, valueOptions, requestOptions)\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    needsEmailVerification,\n    signUpEmailPassword,\n    user\n  }\n}\n", "import {\n  RequestOptions,\n  signUpEmailSecurityKeyPromise,\n  SignUpSecurityKeyOptions,\n  SignUpSecurityKeyState\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ntype SignUpSecurityKeyHandlerResult = Omit<SignUpSecurityKeyState, 'isLoading'>\n\ninterface SignUpSecurityKeyHandler {\n  (\n    email: string,\n    options?: SignUpSecurityKeyOptions,\n    requestOptions?: RequestOptions\n  ): Promise<SignUpSecurityKeyHandlerResult>\n}\n\nexport interface SignUpSecurityKeyHookResult extends SignUpSecurityKeyState {\n  /** Used for a new user to sign up with a security key. Returns a promise with the current context */\n  signUpEmailSecurityKey: SignUpSecurityKeyHandler\n}\n\ninterface SignUpSecurityKeyHook {\n  (options?: SignUpSecurityKeyOptions): SignUpSecurityKeyHookResult\n}\n\n/**\n * Use the hook `useSignUpEmailSecurityKeyEmail` to sign up a user with security key and an email using the WebAuthn API.\n *\n * @example\n * ```tsx\n * const { signUpEmailSecurityKey, needsEmailVerification, isLoading, isSuccess, isError, error } = useSignUpEmailSecurityKeyEmail()\n *\n * console.log({ needsEmailVerification, isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signUpEmailSecurityKey('joe@example.com')\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-up-security-key\n */\nexport const useSignUpEmailSecurityKeyEmail: SignUpSecurityKeyHook = (\n  hookOptions?: SignUpSecurityKeyOptions\n) => {\n  const service = useAuthInterpreter()\n  const isError = useSelector(service, (state) => !!state.context.errors.registration)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.registration || null,\n    (a, b) => a?.error === b?.error\n  )\n\n  const isLoading = useSelector(service, (state) => state.matches('registration.securityKey'))\n\n  const needsEmailVerification = useSelector(service, (state) =>\n    state.matches('registration.incomplete.needsEmailVerification')\n  )\n\n  const isSuccess = useSelector(service, (state) =>\n    state.matches({\n      authentication: 'signedIn',\n      registration: 'complete'\n    })\n  )\n\n  const signUpEmailSecurityKey: SignUpSecurityKeyHandler = (\n    email,\n    options = hookOptions,\n    requestOptions?: RequestOptions\n  ) => signUpEmailSecurityKeyPromise(service, email, options, requestOptions)\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    needsEmailVerification,\n    signUpEmailSecurityKey,\n    user\n  }\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserAvatarUrl` to get the avatar URL of the user.\n *\n * @example\n * ```tsx\n * const userAvatarUrl = useUserAvatarUrl();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-avatar-url\n */\nexport const useUserAvatarUrl = (): string | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.avatarUrl,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserDefaultRole` to get the default role of the user.\n *\n * @example\n * ```tsx\n * const userDefaultRole = useUserDefaultRole();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-default-role\n */\nexport const useUserDefaultRole = (): string | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.defaultRole,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserDisplayName` to get the display name of the user.\n *\n * @example\n * ```tsx\n * const userDisplayName = useUserDisplayName();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-display-name\n */\nexport const useUserDisplayName = (): string | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.displayName,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserEmail` to get the email of the user.\n *\n * @example\n * ```tsx\n * const userEmail = useUserEmail();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-email\n */\nexport const useUserEmail = (): string | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.email,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserId` to get the id of the user.\n *\n * @example\n * ```tsx\n * const userId = useUserId();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-id\n */\nexport const useUserId = (): string | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.id,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserIsAnonymous` to see if the user is anonymous or not.\n *\n * @example\n * ```tsx\n * const userIsAnonymous = useUserIsAnonymous();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-is-anonymous\n */\nexport const useUserIsAnonymous = (): boolean | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.isAnonymous,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserLocale` to get the locale of the user.\n *\n * @example\n * ```tsx\n * const userLocale = useUserLocale();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-locale\n */\nexport const useUserLocale = (): string | undefined => {\n  const service = useAuthInterpreter()\n  return useSelector(\n    service,\n    (state) => state.context.user?.locale,\n    (a, b) => a === b\n  )\n}\n", "import { useSelector } from '@xstate/react'\n\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\n/**\n * Use the hook `useUserRoles` to get all allowed roles of the user.\n *\n * @example\n * ```tsx\n * const userRoles = useUserRoles();\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-user-roles\n */\nexport const useUserRoles = (): string[] => {\n  const service = useAuthInterpreter()\n  return useSelector(service, (state) => {\n    if (!state.matches('authentication.signedIn')) {\n      return []\n    }\n    return state.context.user?.roles || []\n  })\n}\n", "import {\n  EmailOTPOptions,\n  SignInEmailOTPHandlerResult,\n  signInEmailOTPPromise,\n  SignInEmailOTPState,\n  VerifyEmailOTPHandlerResult,\n  verifyEmailOTPPromise\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\nexport interface SignInEmailOTPHandler {\n  (email: string, options?: EmailOTPOptions): Promise<SignInEmailOTPHandlerResult>\n}\n\nexport interface VerifyEmailOTPHandler {\n  (email: string, otp: string): Promise<VerifyEmailOTPHandlerResult>\n}\n\nexport interface SignInEmailOTPHookResult extends SignInEmailOTPState {\n  signInEmailOTP: SignInEmailOTPHandler\n  verifyEmailOTP: VerifyEmailOTPHandler\n}\n\n/**\n * Use the hook `useSignInEmailOTP` to sign in a user with a one-time password sent via email.\n *\n * ## Usage\n *\n * 1. Call the `signInEmailOTP` function with the user's email to send a one-time password (OTP) to that email address.\n * 2. The state `needsOtp` will be `true`, indicating that an OTP is required.\n * 3. Once the user receives the OTP via email, call the `verifyEmailOTP` function with the email and the received OTP.\n * 4. On successful verification, the user is authenticated, and `isSuccess` becomes `true`.\n *\n * Any error is monitored through `isError` and `error`. While the `signInEmailOTP` and `verifyEmailOTP` actions are running, `isLoading` equals `true`.\n *\n * @example\n * ```tsx\n * const { signInEmailOTP, verifyEmailOTP, isLoading, isSuccess, isError, error } = useSignInEmailOTP()\n *\n * const signIn = async (e) => {\n *   e.preventDefault();\n *   await signInEmailOTP('john@gmail.com');\n * }\n *\n * const verify = async (e) => {\n *   e.preventDefault();\n *   await verifyEmailOTP('123456');\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-email-otp\n */\nexport function useSignInEmailOTP(options?: EmailOTPOptions): SignInEmailOTPHookResult {\n  const service = useAuthInterpreter()\n\n  const signInEmailOTP: SignInEmailOTPHandler = (email: string, overrideOptions = options) =>\n    signInEmailOTPPromise(service, email, overrideOptions)\n\n  const verifyEmailOTP: VerifyEmailOTPHandler = async (email: string, otp: string) =>\n    verifyEmailOTPPromise(service, email, otp)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.registration || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isLoading = useSelector(\n    service,\n    (state) =>\n      state.matches('registration.signInEmailOTP') || state.matches('registration.verifyEmailOTP')\n  )\n\n  const isSuccess = useSelector(service, (state) => state.matches('authentication.signedIn'))\n\n  const needsOtp = useSelector(service, (state) =>\n    state.matches('registration.incomplete.needsOtp')\n  )\n\n  const isError = useSelector(service, (state) => state.matches('registration.incomplete.failed'))\n\n  return { signInEmailOTP, verifyEmailOTP, isLoading, isSuccess, isError, error, needsOtp }\n}\n", "import {\n  SignInIdTokenHandlerResult,\n  SignInIdTokenState,\n  signInIdTokenPromise,\n  Provider\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ninterface SignInIdTokenHandler {\n  (provider: Provider, idToken: string, nonce?: string): Promise<SignInIdTokenHandlerResult>\n}\n\nexport interface SignInIdTokenHookResult extends SignInIdTokenState {\n  signInIdToken: SignInIdTokenHandler\n}\n\ninterface SignInIdTokenHook {\n  (): SignInIdTokenHookResult\n}\n\n/**\n * Use the hook `useSignInIdToken` to sign in a user using an `idToken`.\n *\n * @example\n * ```tsx\n * const { signInIdToken, isLoading, isSuccess, isError, error } = useSignInIdToken()\n *\n * console.log({ isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInIdToken({ provider: 'google', idToken: '...' })\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-idtoken\n */\nexport const useSignInIdToken: SignInIdTokenHook = () => {\n  const service = useAuthInterpreter()\n  const signInIdToken: SignInIdTokenHandler = (\n    provider: Provider,\n    idToken: string,\n    nonce?: string\n  ) =>\n    signInIdTokenPromise(service, {\n      provider,\n      idToken,\n      nonce\n    })\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.authentication || null,\n    (a, b) => a?.error === b?.error\n  )\n\n  const isSuccess = useSelector(service, (state) => state.matches({ authentication: 'signedIn' }))\n\n  const isLoading = useSelector(\n    service,\n    (state) => state.matches({ authentication: { authenticating: 'idToken' } }),\n    (a, b) => a === b\n  )\n\n  const isError = useSelector(\n    service,\n    (state) => state.matches({ authentication: { signedOut: 'failed' } }),\n    (a, b) => a === b\n  )\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    signInIdToken,\n    user\n  }\n}\n", "import {\n  ActionErrorState,\n  ActionSuccessState,\n  ErrorPayload,\n  LinkIdTokenHandlerParams,\n  LinkIdTokenHandlerResult,\n  linkIdTokenPromise\n} from '@nhost/nhost-js'\nimport { useState } from 'react'\nimport { useNhostClient } from './useNhostClient'\n\ninterface LinkIdTokenHandler {\n  (params: LinkIdTokenHandlerParams): Promise<LinkIdTokenHandlerResult>\n}\n\nexport interface LinkIdTokenHookResult extends ActionErrorState, ActionSuccessState {\n  linkIdToken: LinkIdTokenHandler\n}\n\ninterface LinkIdTokenHook {\n  (): LinkIdTokenHookResult\n}\n\n/**\n * Use the hook `useLinkIdToken` to link a user account with the provider's account using an id token\n *\n * @example\n * ```tsx\n * const { linkIdToken, isLoading, isSuccess, isError, error } = useLinkIdToken()\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await linkIdToken({\n *      provider: 'google',\n *      idToken: '...',\n *      nonce: '...'\n *   })\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-link-id-token\n */\nexport const useLinkIdToken: LinkIdTokenHook = () => {\n  const nhost = useNhostClient()\n  const [error, setError] = useState<ErrorPayload | null>(null)\n  const isSuccess = !error\n  const isError = !!error\n  const [isLoading, setIsLoading] = useState(false)\n\n  const linkIdToken: LinkIdTokenHandler = async ({\n    provider,\n    idToken,\n    nonce\n  }: LinkIdTokenHandlerParams) => {\n    setIsLoading(true)\n\n    const result = await linkIdTokenPromise(nhost.auth.client, {\n      provider,\n      idToken,\n      ...(nonce && { nonce })\n    })\n\n    const { error } = result\n\n    if (error) {\n      setError(error)\n    }\n\n    setIsLoading(false)\n\n    return result\n  }\n\n  return { linkIdToken, isLoading, isSuccess, isError, error }\n}\n", "import {\n  signInSecurityKeyPromise,\n  SignInSecurityKeyHandlerResult,\n  SignInSecurityKeyState\n} from '@nhost/nhost-js'\nimport { useSelector } from '@xstate/react'\nimport { useAuthInterpreter } from './useAuthInterpreter'\n\ninterface SignInSecurityKeyHandler {\n  (): Promise<SignInSecurityKeyHandlerResult>\n}\n\nexport interface SignInSecurityKeyHookResult extends SignInSecurityKeyState {\n  signInSecurityKey: SignInSecurityKeyHandler\n}\n\ninterface SignInSecurityKeyHook {\n  (): SignInSecurityKeyHookResult\n}\n\n/**\n * Use the hook `useSignInSecurityKey` to sign in a user with a security key using the WebAuthn API.\n *\n * @example\n * ```tsx\n * const { signInSecurityKey, needsEmailVerification, isLoading, isSuccess, isError, error } = useSignInSecurityKey()\n *\n * console.log({ needsEmailVerification, isLoading, isSuccess, isError, error });\n *\n * const handleFormSubmit = async (e) => {\n *   e.preventDefault();\n *\n *   await signInSecurityKey()\n * }\n * ```\n *\n * @docs https://docs.nhost.io/reference/react/use-sign-in-security-key\n */\nexport const useSignInSecurityKey: SignInSecurityKeyHook = () => {\n  const service = useAuthInterpreter()\n\n  const signInSecurityKey: SignInSecurityKeyHandler = () => signInSecurityKeyPromise(service)\n\n  const user = useSelector(\n    service,\n    (state) => state.context.user,\n    (a, b) => a?.id === b?.id\n  )\n  const accessToken = useSelector(service, (state) => state.context.accessToken.value)\n\n  const refreshToken = useSelector(service, (state) => state.context.refreshToken.value)\n\n  const error = useSelector(\n    service,\n    (state) => state.context.errors.authentication || null,\n    (a, b) => a?.error === b?.error\n  )\n  const isSuccess = useSelector(service, (state) =>\n    state.matches({\n      authentication: 'signedIn'\n    })\n  )\n  const isLoading = useSelector(\n    service,\n    (state) => state.matches({ authentication: { authenticating: 'securityKeyEmail' } }),\n    (a, b) => a === b\n  )\n  const needsEmailVerification = useSelector(\n    service,\n    (state) =>\n      state.matches({\n        authentication: { signedOut: 'noErrors' },\n        registration: { incomplete: 'needsEmailVerification' }\n      }),\n    (a, b) => a === b\n  )\n  const isError = useSelector(\n    service,\n    (state) => state.matches({ authentication: { signedOut: 'failed' } }),\n    (a, b) => a === b\n  )\n\n  return {\n    accessToken,\n    refreshToken,\n    error,\n    isError,\n    isLoading,\n    isSuccess,\n    needsEmailVerification,\n    signInSecurityKey,\n    user\n  }\n}\n"],
  "mappings": "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",
  "names": ["x", "y", "React", "useState", "useLayoutEffect", "useEffect", "x", "y", "React", "useRef", "useEffect", "import_react", "import_react", "p", "ar", "import_react", "import_with_selector", "import_react", "import_with_selector", "React", "VanillaNhostClient", "_VanillaNhostClient", "NhostClient", "params", "NhostReactContext", "createContext", "NhostProvider", "nhost", "initial", "props", "interpreter", "useInterpret", "isInitialMount", "useRef", "useEffect", "me", "NhostReactProvider", "useAuthInterpreter", "_a", "useContext", "useAuthenticationStatus", "service", "useSelector", "state", "a", "b", "SignedIn", "children", "isAuthenticated", "createElement", "Fragment", "SignedOut", "useAccessToken", "useNhostClient", "useAddSecurityKey", "error", "setError", "useState", "isSuccess", "isError", "isLoading", "setIsLoading", "nickname", "result", "addSecurityKeyPromise", "useAuthenticated", "setIsAuthenticated", "newValue", "useChangeEmail", "options", "machine", "useMemo", "createChangeEmailMachine", "needsEmailVerification", "useCallback", "valueEmail", "valueOptions", "changeEmailPromise", "useChangePassword", "createChangePasswordMachine", "valuePassword", "changePasswordPromise", "useConfigMfa", "createEnableMfaMachine", "isGenerating", "isGenerated", "isActivating", "isActivated", "isDisabling", "qrCodeDataUrl", "totpSecret", "generateQrCodePromise", "code", "activateMfaPromise", "disableMfaPromise", "useDecodedAccessToken", "jwt", "jwtDecode", "useFileUploadItem", "ref", "add", "bucketId", "upload", "uploadFilePromise", "cancel", "destroy", "isUploading", "isUploaded", "progress", "id", "name", "useFileUpload", "createFileUploadMachine", "useHasuraClaims", "claims", "useHasuraClaim", "hasuraClaims", "useMultipleFilesUpload", "errors", "setErrors", "createMultipleFilesUploadMachine", "uploadMultipleFilesPromise", "clear", "files", "useProviderLink", "isSSR", "setIsSSR", "accessToken", "_", "provider", "providerLink", "connectOptions", "encodeQueryParameters", "rewriteRedirectTo", "useResetPassword", "createResetPasswordMachine", "isSent", "resetPasswordPromise", "useSendVerificationEmail", "createSendVerificationEmailMachine", "sendVerificationEmailPromise", "useSignInAnonymous", "signInAnonymous", "signInAnonymousPromise", "user", "useSignInEmailPassword", "signInEmailPassword", "email", "password", "signInEmailPasswordPromise", "sendMfaOtp", "otp", "signInMfaTotpPromise", "refreshToken", "needsMfaOtp", "mfa", "useSignInEmailPasswordless", "signInEmailPasswordless", "signInEmailPasswordlessPromise", "useSignInEmailSecurityKey", "signInEmailSecurityKey", "signInEmailSecurityKeyPromise", "useUserData", "useElevateSecurityKeyEmail", "hasElevatedClaim", "elevated", "setElevated", "elevateEmailSecurityKey", "elevateEmailSecurityKeyPromise", "useSignInPAT", "signInPAT", "pat", "signInPATPromise", "useSignInSmsPasswordless", "stateOptions", "_phoneNumber", "setPhoneNumber", "signInSmsPasswordless", "phoneNumber", "signInSmsPasswordlessPromise", "sendOtp", "args", "signInSmsPasswordlessOtpPromise", "needsOtp", "useSignOut", "stateAll", "signOut", "valueAll", "signOutPromise", "useSignUpEmailPassword", "signUpEmailPassword", "requestOptions", "signUpEmailPasswordPromise", "useSignUpEmailSecurityKeyEmail", "hookOptions", "signUpEmailSecurityKey", "signUpEmailSecurityKeyPromise", "useUserAvatarUrl", "useUserDefaultRole", "useUserDisplayName", "useUserEmail", "useUserId", "useUserIsAnonymous", "useUserLocale", "useUserRoles", "useSignInEmailOTP", "signInEmailOTP", "overrideOptions", "signInEmailOTPPromise", "verifyEmailOTP", "verifyEmailOTPPromise", "useSignInIdToken", "signInIdToken", "idToken", "nonce", "signInIdTokenPromise", "useLinkIdToken", "linkIdTokenPromise", "useSignInSecurityKey", "signInSecurityKey", "signInSecurityKeyPromise"]
}
